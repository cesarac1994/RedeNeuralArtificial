#include <stdio.h>
#include <stdlib.h>
#include <iostream>
using namespace std;
#define profundidade 10
#define linhas 10
#define colunas 100

char teste;
long long int tESTE=0;
/*
*Reconhecimento de dez caracteres em vetores de 100 elementos 
*(contendo os pixels das imagens dos caracteres, 
*onde os pixels são preto e branco e representados, 
*respectivamente por 1 e -1), utilizando uma rede neural 
*(perceptrons) com 10 neurônios em camada simples.
*/

int main(){

///************************************VETORZÃƒO***************************************************************************///
  int x[linhas][colunas]= {
{//ZERO
 -1 , -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , 1 , -1 , -1 ,
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 ,
 -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 ,
 -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 ,
 -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 ,
 -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 ,
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , 1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 },

{//UM
 -1 , -1 , -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , 1 , -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , -1  },

{//DOIS
 -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , 1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , -1 , -1  },


{//TRES
 -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 , -1  },

{//QUATRO
 -1 , -1 , 1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , 1 , 1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  },




{//CINCO
 -1 , -1 , 1 , 1 , 1 , 1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , 1 , 1 , -1 , -1 , -1 , -1 , -1 , -1  },

{//SEIS
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , 1 , 1 , -1  ,
 -1 , -1 , -1 , 1 , -1 , -1 , 1 , -1 , -1 , 1  ,
 -1 , -1 , -1 , 1 , -1 , 1 , -1 , -1 , -1 , 1  ,
 -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , 1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , 1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , 1 , -1 , -1  },

{//SETE
 -1 , -1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1  },



{//OITO
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1  ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , 1 , -1  ,
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , 1 , -1  ,
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , 1 , -1 , -1  ,
 -1 , -1 , -1 , -1 , 1 , 1 , 1 , -1 , -1 , -1  },





{//NOVE
 -1,  -1,  -1,  -1,  -1,  1,  1,  1,  -1,  -1  ,
 -1,  -1,  -1,  -1,  1,  -1,  -1,  -1,  1,  -1  ,
 -1,  -1,  -1,  1,  -1,  -1,  -1,  -1,  -1,  1  ,
 -1,  -1,  -1,  1,  -1,  -1,  -1,  -1,  -1,  1  ,
 -1,  -1,  -1,  -1,  1,  -1,  -1,  -1,  1,  1  ,
 -1,  -1,  -1,  -1,  -1,  1,  1,  1,  -1,  1  ,
 -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1  ,
 -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1,  -1  ,
 -1,  -1,  -1,  -1,  -1,  -1,  -1,  1,  -1,  -1  ,
 -1,  -1,  -1,  -1,  -1,  1,  1,  -1,  -1,  -1  }
};

///*********************************FIM DO VETORZÃƒO******************************************************************************///


  int w[linhas][colunas]= {
{//MATRIZ ZERADA W0
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },

{//MATRIZ ZERADA W1
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W2
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W3
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W4
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W5
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W6
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W7
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W8
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 },


{//MATRIZ ZERADA W9
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 ,
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 } 
 };
  int b[profundidade]={-1, -1, -1, -1, -1, -1, -1, -1, -1, -1};
  int t[linhas][profundidade]={//MATRIZ ESPERADA  //CORRESPONDENCIA AO CARACTERE:
 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , //LINHA 0                  T
 -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , //LINHA 1                  |
 -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , //LINHA 2                  |
 -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , -1 , //LINHA 3                  |
 -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , -1 , //LINHA 4                  |
 -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , -1 , //LINHA 5                  |
 -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , -1 , //LINHA 6                  |
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , -1 , //LINHA 7                  |
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 , -1 , //LINHA 8                  |
 -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , -1 , 1 }; //LINHA 9                 V
  ///////////////////////////////////////////////////////
  int erro=10;
  int somatorio=0,saida;
  int yliq=0;
  int limiar=0;
  int alfa=1;
  int i,//RODAR LINHAS
      j,//RODAR COLUNAS
      k;//RODAR PROFUNDIDADE

  while(erro!=0){
     erro=0;
     for(i=0;i<linhas;i++){
//RODAR K, TRANSFORMAR VARIAVEIS (Yliq, somatorio,b) EM VETORES...
        for(k=0;k<profundidade;k++){
            somatorio=0;
            yliq=0;
            for(j=0;j<colunas;j++){
             somatorio +=  w[k][j] * x[i][j];
            }
            yliq=b[k]+somatorio;

            if(yliq>=limiar)
                     saida=1;
            else
                     saida=-1;
           //COMPARAÇÃO

            if(t[i][k]!=saida){//PRECISA ATUALIZAR PESO
                    erro++;
                    for(j=0;j<colunas;j++){
                        w[k][j]+=alfa*t[i][k]*x[i][j];
                    }
                    b[k]=b[k]+alfa*t[i][k];

                    cout << "ITERACAO " << tESTE << "  DO NUMERO:"<< i << "  NEURONIO:" << k << "         ERRO:"<<erro;
                    tESTE++;
    //              scanf("%c",&teste);
                    printf("\n\n");
                    for(j=0;j<colunas;j++)
                        cout<<"wnovo"<<i<<j<<"="<<w[k][j]<<" ";
                    cout<<endl<<endl;
            }
        }
     }
  }


cout<<"\n============RESULTADO FINAL==============";
//RODAR K--------------------------------
  for(k=0;k<profundidade;k++){
  	  cout<<"\n\n Neuronio: "<<k<<endl;
	  for(j=0;j<colunas;j++)
	    cout<<"peso"<< j<<"="<<w[k][j] << " ";
  }
  for(k=0;k<profundidade;k++)
     cout<<"\nb"<<k<<"="<<b[k]<<endl;

cout<<"\n=============TESTE DA RNA================";
//RODAR K---------------------------
  for(i=0;i<linhas;i++){
  	cout<<endl;
     for(k=0;k<profundidade;k++){
        yliq=0;
        somatorio=0;
        for(j=0;j<colunas;j++){
         somatorio +=  w[k][j] * x[i][j];
        }
        yliq=b[k]+somatorio;

        if(yliq>=limiar)
          cout<<"  1 ";
        else
          cout<<" -1 ";
     }
  }


return 0;
}
